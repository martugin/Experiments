<Window x:Class="DetailedTree.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:DetailedTree"
        Title="MainWindow" Height="252" Width="387">
	<TreeView x:Name="detailedTreeView">
		<TreeView.Resources>
			<Style TargetType="TreeViewItem">
				<Setter Property="Template" >
					<Setter.Value>
						<ControlTemplate TargetType="TreeViewItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
							<Grid>
								<!-- Здесь сделаны изменения -->
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition />
								</Grid.RowDefinitions>
								<ToggleButton IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource Mode=TemplatedParent, AncestorType={x:Null}}}" ClickMode="Press" Name="Expander">
									<ToggleButton.Style>
										<Style TargetType="ToggleButton">
											<Style.Resources>
												<ResourceDictionary />
											</Style.Resources>
											<Setter Property="UIElement.Focusable">
												<Setter.Value>
													<s:Boolean>False</s:Boolean>
												</Setter.Value>
											</Setter>
											<Setter Property="FrameworkElement.Width">
												<Setter.Value>
													<s:Double>16</s:Double>
												</Setter.Value>
											</Setter>
											<Setter Property="FrameworkElement.Height">
												<Setter.Value>
													<s:Double>16</s:Double>
												</Setter.Value>
											</Setter>
											<Setter Property="Control.Template">
												<Setter.Value>
													<ControlTemplate TargetType="ToggleButton">
														<Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
															<Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
																<Path.Data>
																	<PathGeometry Figures="M0,0L0,6L6,0z" />
																</Path.Data>
																<Path.RenderTransform>
																	<RotateTransform Angle="135" CenterX="3" CenterY="3" />
																</Path.RenderTransform>
															</Path>
														</Border>
														<ControlTemplate.Triggers>
															<Trigger Property="UIElement.IsMouseOver">
																<Setter Property="Shape.Stroke" TargetName="ExpandPath">
																	<Setter.Value>
																		<SolidColorBrush>#FF1BBBFA</SolidColorBrush>
																	</Setter.Value>
																</Setter>
																<Setter Property="Shape.Fill" TargetName="ExpandPath">
																	<Setter.Value>
																		<SolidColorBrush>#00FFFFFF</SolidColorBrush>
																	</Setter.Value>
																</Setter>
																<Trigger.Value>
																	<s:Boolean>True</s:Boolean>
																</Trigger.Value>
															</Trigger>
															<Trigger Property="ToggleButton.IsChecked">
																<Setter Property="UIElement.RenderTransform" TargetName="ExpandPath">
																	<Setter.Value>
																		<RotateTransform Angle="180" CenterX="3" CenterY="3" />
																	</Setter.Value>
																</Setter>
																<Setter Property="Shape.Fill" TargetName="ExpandPath">
																	<Setter.Value>
																		<SolidColorBrush>#FF595959</SolidColorBrush>
																	</Setter.Value>
																</Setter>
																<Setter Property="Shape.Stroke" TargetName="ExpandPath">
																	<Setter.Value>
																		<SolidColorBrush>#FF262626</SolidColorBrush>
																	</Setter.Value>
																</Setter>
																<Trigger.Value>
																	<s:Boolean>True</s:Boolean>
																</Trigger.Value>
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</ToggleButton.Style>
								</ToggleButton>
								<Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True" Grid.Column="1">
									<!-- Здесь сделаны изменения -->
									<ContentPresenter 
										Content="{TemplateBinding HeaderedContentControl.Header}" 
										ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" 
										ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" 
										ContentSource="Header" Name="PART_Header" 
										HorizontalAlignment="Stretch" 
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
								</Border>
								<!-- Здесь сделаны изменения -->
								<ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.Row="1"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="TreeViewItem.IsExpanded">
									<Setter Property="UIElement.Visibility" TargetName="ItemsHost">
										<Setter.Value>
											<x:Static Member="Visibility.Collapsed" />
										</Setter.Value>
									</Setter>
									<Trigger.Value>
										<s:Boolean>False</s:Boolean>
									</Trigger.Value>
								</Trigger>
								<Trigger Property="ItemsControl.HasItems">
									<Setter Property="UIElement.Visibility" TargetName="Expander">
										<Setter.Value>
											<x:Static Member="Visibility.Hidden" />
										</Setter.Value>
									</Setter>
									<Trigger.Value>
										<s:Boolean>False</s:Boolean>
									</Trigger.Value>
								</Trigger>
								<Trigger Property="TreeViewItem.IsSelected">
									<Setter Property="Panel.Background" TargetName="Bd">
										<Setter.Value>
											<DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
										</Setter.Value>
									</Setter>
									<Setter Property="TextElement.Foreground">
										<Setter.Value>
											<DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
										</Setter.Value>
									</Setter>
									<Trigger.Value>
										<s:Boolean>True</s:Boolean>
									</Trigger.Value>
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="TreeViewItem.IsSelected">
											<Condition.Value>
												<s:Boolean>True</s:Boolean>
											</Condition.Value>
										</Condition>
										<Condition Property="Selector.IsSelectionActive">
											<Condition.Value>
												<s:Boolean>False</s:Boolean>
											</Condition.Value>
										</Condition>
									</MultiTrigger.Conditions>
									<Setter Property="Panel.Background" TargetName="Bd">
										<Setter.Value>
											<DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
										</Setter.Value>
									</Setter>
									<Setter Property="TextElement.Foreground">
										<Setter.Value>
											<DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
										</Setter.Value>
									</Setter>
								</MultiTrigger>
								<Trigger Property="UIElement.IsEnabled">
									<Setter Property="TextElement.Foreground">
										<Setter.Value>
											<DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
										</Setter.Value>
									</Setter>
									<Trigger.Value>
										<s:Boolean>False</s:Boolean>
									</Trigger.Value>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</TreeView.Resources>
		<Control.Template>
			<ControlTemplate>
				<StackPanel>
					<Grid x:Name="HeaderGrid">
						<Grid.Resources>
							<Style TargetType="GridViewColumnHeader">
								<Setter Property="Margin" Value="1"/>
							</Style>
						</Grid.Resources>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<StackPanel Grid.Column="0" >
							<GridViewColumnHeader Content="Title" x:Name="TitleHeader" Width="220" />
						</StackPanel>
						<StackPanel Grid.Column="1" >
							<GridViewColumnHeader Content="Date/Time" x:Name="DateTimeHeader" />
						</StackPanel>
						<StackPanel Grid.Column="2" >
							<GridViewColumnHeader Content="Raiting" x:Name="RaitingHeader" />
						</StackPanel>
						<Rectangle Grid.Column="3" x:Name="EmptyHeader"  />
					</Grid>
					<ItemsPresenter Width="{Binding ElementName=HeaderGrid, Path=ActualWidth}" />
				</StackPanel>
			</ControlTemplate>
		</Control.Template>
		<TreeView.ItemTemplate>
			<HierarchicalDataTemplate ItemsSource="{Binding Path=Children}">
				<Grid>
					<Grid.Resources>
						<Style TargetType="TextBlock">
							<Setter Property="Margin" Value="1"/>
						</Style>
					</Grid.Resources>
					
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
						<TextBlock Text="{Binding Path=Title}" Grid.Column="0" />
						<TextBlock Text="{Binding Path=DateTime}" Grid.Column="1"
								   Width="{Binding ElementName=DateTimeHeader, Path=ActualWidth}"/> 
						<TextBlock Text="{Binding Path=Raiting}" Grid.Column="2"
								   Width="{Binding ElementName=RaitingHeader, Path=ActualWidth}"/> 
						<Rectangle Width="{Binding ElementName=EmptyHeader, Path=ActualWidth}" Grid.Column="3" /> 
				</Grid>
			</HierarchicalDataTemplate>
		</TreeView.ItemTemplate>
	</TreeView>
		
</Window>
